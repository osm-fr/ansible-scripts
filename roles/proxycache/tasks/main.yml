- name: install packages
  apt:
    pkg:
      - nginx
      - logrotate

# init letsencrypt
- name: init /etc/nginx/global.d/ path
  file:
    path: /etc/nginx/global.d/
    state: directory

- name: copy nginx challenge config
  copy:
    src: nginx-letsencrypt-challenge.conf     
    dest: "/etc/nginx/global.d/  letsencrypt-challenge.conf"
    notify: reload nginx

- name: copy nginx ssl config
  copy:
    src: nginx-letsencrypt-ssl.conf     
    dest: "/etc/nginx/global.d/letsencrypt-ssl.conf"
  notify: reload nginx

# recherche config pour ce host
- name: check if nginx config exists
  local_action: stat path="roles/proxycache/files/nginx-{{ inventory_hostname }}.site"
  become: no
  register: nginx_site

- name: copy nginx config
  copy: src=nginx-{{ inventory_hostname }}.site dest="/etc/nginx/conf.d/nginx-{{ inventory_hostname }}.conf"
  when: nginx_site.stat.exists
  notify: reload nginx

- name: check if nginx config template exists
  local_action: stat path="roles/proxycache/templates/nginx-{{ inventory_hostname }}.site"
  become: no
  register: nginx_site

- name: copy nginx config
  template: src=nginx-{{ inventory_hostname }}.site dest="/etc/nginx/conf.d/nginx-{{ inventory_hostname }}.conf"
  when: nginx_site.stat.exists
  notify: reload nginx

# install config des differents param√®tres dans "proxy"
- name: generate nginx config
  template: src="{{ item.config_src | default('nginx-site.j2') }}" dest="/etc/nginx/sites-available/{{ item.logname }}"
    owner=root group=www-data
  with_items: "{{ proxy }}"
  when: proxy is defined
  notify: reload nginx

- name: enable nginx site
  file: src="/etc/nginx/sites-available/{{ item.logname }}" dest="/etc/nginx/sites-enabled/{{ item.logname }}" state=link
  with_items: "{{ proxy }}"
  when: proxy is defined
  notify: reload nginx

- name: generate nginx config
  template: src="{{ item.config_src | default('nginx-site.j2') }}" dest="/etc/nginx/sites-available/{{ item.logname }}"
    owner=root group=www-data
  with_items: "{{ host_proxy }}"
  when: host_proxy is defined
  notify: reload nginx

- name: enable nginx site
  file: 
    src: "/etc/nginx/sites-available/{{ item.logname }}" 
    dest: "/etc/nginx/sites-enabled/{{ item.logname }}" 
    state: link
  with_items: "{{ host_proxy }}"
  when: host_proxy is defined
  notify: reload nginx
