- name: install packages
  apt: pkg={{ item }}
  with_items:
    - apache2
    - build-essential
    - curl
    - libapache2-mod-passenger
    - sqlite3
    - default-jre-headless

    - ruby
    - ruby-dev
    - ruby-passenger
    - ruby-sqlite3

    # for osmium library
    - libboost-dev
    - libbz2-dev
    - libshp-dev
    - libgdchart-gd2-xpm
    - libgdal-dev
    - libexpat1-dev
    - libgeos++-dev
    - libsparsehash-dev
    - libprotoc-dev
    - protobuf-compiler
    - libosmpbf-dev
    # osmconvert osmfilter osmupdate
    - osmctools


- include_tasks: ../../../shared/project-account.yml
  vars:
    user: taginfo

- name: init /data/work/taginfo paths
  file: path={{ item }} state=directory owner=taginfo group=taginfo
  with_items:
    - /data/work/taginfo/data
    - /data/work/taginfo/download
    - /data/work/taginfo/osmosis

- name: add sudoers to access taginfo user
  copy: src=sudoers dest=/etc/sudoers.d/taginfo mode=0440 owner=root group=root validate='visudo -cf %s'

- name: install gems
  gem: user_install=yes name="{{ item }}" state=present
  become: yes
  become_user: taginfo
  with_items:
    - rack
    - rack-contrib
    - sinatra
    - sinatra-r18n
    - json

- name: copy apache config
  copy: src=apache.site dest="/etc/apache2/sites-available/taginfo"
  notify: restart apache

- name: enable apache proxy
  file: src="/etc/apache2/mods-available/{{ item }}" dest="/etc/apache2/mods-enabled/{{ item }}" state=link
  notify: restart apache
  with_items:
    - proxy.conf
    - proxy.load
    - proxy_http.load

- name: enable apache site
  file: src="/etc/apache2/sites-available/taginfo" dest="/etc/apache2/sites-enabled/taginfo" state=link
  notify: restart apache

- name: checkout git repository
  git: repo="{{ item.repo }}" dest="/data/project/taginfo/{{ item.path }}" force=no update=no
  become: yes
  become_user: taginfo
  with_items:
    - { repo: "https://github.com/joto/taginfo.git",   path: "taginfo" }
    - { repo: "https://github.com/osmcode/libosmium.git",    path: "osmium" }
    - { repo: "https://github.com/scrosby/OSM-binary", path: "OSM-binary" }

- name: add taginfo files
  copy: src="{{ item }}" dest="/data/project/taginfo/{{ item }}"
  become: yes
  become_user: taginfo
  with_items:
    - taginfo-config.json
    - 10_download.sh
    - 10_filtre.sh
    - 10_filtre.osh.sh
    - 10_update_pbf.sh
    - 10_update_pbf.osh.sh
    - 20_update.sh
    - 30_restart_webserver.sh
    - crontab.sh
    - crontab.osh.sh
    - france.poly
    - remove-not-in-france.sh
    - remove-metadata.sh
    - remove-source.sh
    - key-source-valide.txt

- name: add taginfo fr-metropolitaine.png file
  copy: src="fr-metropolitaine.png" dest="/data/project/taginfo/taginfo/web/public/img/logo/fr-metropolitaine.png"
  become: yes
  become_user: taginfo

- name: compile OSM-binary
  command: chdir=/data/project/taginfo/OSM-binary/src make
  register: make
  changed_when: "not 'make: Nothing to be done for ' in \"\"\"{{ make.stdout }}\"\"\""
  become: yes
  become_user: taginfo

- name: compile tagstats
  command: chdir=/data/project/taginfo/taginfo/tagstats make
  register: make
  changed_when: "not 'make: Nothing to be done for ' in \"\"\"{{ make.stdout }}\"\"\""
  become: yes
  become_user: taginfo

- name: copy compiled tagstats
  command: cp /data/project/taginfo/taginfo/tagstats/tagstats /data/project/taginfo/taginfo/sources/db/tagstats
  become: yes
  become_user: taginfo

- name: add links to /data/work/taginfo
  file: src="/data/work/taginfo/{{ item }}" dest="/data/project/taginfo/{{ item }}" state=link
  become: yes
  become_user: taginfo
  with_items:
    - data
    - download

- name: initialize daily crontab
  cron: name="update taginfo" hour=0 minute=5 job="(./crontab.sh)"
  become: yes
  become_user: taginfo

- name: initialize reboot crontab
  cron: name="start taginfo" special_time=reboot job="./30_restart_webserver.sh"
  become: yes
  become_user: taginfo

# To finish installation, run:
# - ./10_download.sh
# - ./20_update.sh
# - ./30_restart_webserver.sh
