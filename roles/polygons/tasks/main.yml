- name: set postgis = 2.5
  set_fact:
    postgis_version: 2.5
  when: ansible_distribution_release == "buster"

- name: set postgis = 3.3
  set_fact:
    postgis_version: 3.3
  when: ansible_distribution_release == "bookworm"

- name: install packages
  apt:
    update_cache: yes
    pkg:
      - apache2
      - python3-lockfile
      - python3-matplotlib
      - python3-psycopg2
      - python3-shapely
      - postgresql
      - postgresql-postgis
      - postgresql-contrib

- name: ensure postgresql server is running
  service: name=postgresql state=started

- include_tasks: ../../../shared/project-account.yml
  vars:
    user: polygons

- name: add sudoers to access polygons user
  copy: src=sudoers dest=/etc/sudoers.d/polygons mode=0440 owner=root group=root validate='visudo -cf %s'

- name: init database
  postgresql_db: name=polygons encoding='UTF-8' lc_collate='en_US.UTF-8' lc_ctype='en_US.UTF-8' template='template0'
  register: createdb_polygons
  become: yes
  become_user: postgres

- name: init database user
  postgresql_user: name=polygons password=-polygons- db=polygons priv=ALL
  become: yes
  become_user: postgres

- name: Add access to postgres database
  postgresql_privs:
    login_db: polygons
    state: present
    privs: ALL
    type: database
    roles: polygons
  become: yes
  become_user: postgres

- name: Add access to postgres database
  postgresql_privs:
    login_db: polygons
    state: present
    privs: ALL
    type: schema
    obj: public
    roles: polygons
  become: yes
  become_user: postgres

- name: psql extensions
  postgresql_ext:
    name: "{{ item }}"
    login_db: "polygons"
  become: yes
  become_user: postgres
  with_items:
    - hstore
    - postgis

- name: Get Postgres informations
  community.postgresql.postgresql_info:
  become: true
  become_user: postgres
  register: postgres_info

- name: psql extension postgis - spatial_ref_sys
  command: psql -d polygons -f /usr/share/postgresql/{{ postgres_info.version.major }}/contrib/postgis-{{ postgis_version }}/spatial_ref_sys.sql
  when: createdb_polygons.changed
  become: yes
  become_user: postgres

- name: psql access to tables
  postgresql_privs: database=polygons type=table objs={{ item }} roles=polygons privs=SELECT,INSERT,UPDATE,DELETE
  become: yes
  become_user: postgres
  with_items:
    - geometry_columns
    - spatial_ref_sys

- name: checkout git repository
  git: repo=https://github.com/jocelynj/osm-polygons-generation.git dest=/data/project/polygons/polygons-generation force=no update=no
  become: yes
  become_user: polygons

- name: psql init
  command: psql -d polygons -f /data/project/polygons/polygons-generation/init.sql
  become: yes
  become_user: polygons

- name: add apache mods
  apache2_module:
    state: present
    name: "{{ item }}"
  notify: restart apache
  with_items:
    - cgid
    - headers

- name: copy apache config
  copy: src=apache.site dest="/etc/apache2/sites-available/polygons.conf"
  notify: restart apache

- name: enable apache site
  file: src="/etc/apache2/sites-available/polygons.conf" dest="/etc/apache2/sites-enabled/polygons.conf" state=link
  notify: restart apache

- name: link state file
  file: src="diffs/planet/minute/state.txt" dest="/data/work/osmbin/replication/state.txt" state=link
  become: yes
  become_user: osmbin
