- name: install packages
  apt:
    pkg:
      - apache2
      - apt-transport-https
      - bzip2
      - gcc
      - gettext
      - git
      - libapache2-mod-wsgi-py3
      - libfreetype6-dev
      - libjpeg-dev
      - libpng-dev
      - librsvg2-bin
      - make
      - pkg-config
      - postgresql
      - postgresql-contrib
      - python3
      - python3-dateutil
      - python3-dev
      - python3-pip
      - python3-polib
      - python3-psycopg2
      - python3-shapely
      - python3-unidecode
      - virtualenv

- name: ensure postgresql server is running
  service: name=postgresql state=started

- include_tasks: ../../../shared/project-account.yml
  vars:
    user: osmose

- name: init /data/work/osmose/results/
  file: path=/data/work/osmose/results/ state=directory owner=osmose group=osmose

- name: add sudoers to access osmose user
  copy: src=sudoers dest=/etc/sudoers.d/osmose-frontend mode=0440 owner=root group=root validate='visudo -cf %s'

- name: init ssh key to osmose user
  authorized_key: user=osmose key="{{ item }}"
  with_file:
    - "{{ lookup('env','PWD') }}/public_keys/jocelyn"

- name: init database user
  postgresql_user: name=osmose password=clostAdtoi
  become: yes
  become_user: postgres

- name: init database
  postgresql_db:
    name: osmose_frontend
    encoding: 'UTF-8'
    lc_collate: 'C'
    lc_ctype: 'C'
    owner: osmose
    template: 'template0'
  register: createdb_osmose
  become: yes
  become_user: postgres

- name: psql extension hstore
  command: psql -d osmose_frontend -c "CREATE EXTENSION IF NOT EXISTS {{ item }}"
  register: psql_res
  changed_when: "not 'extension \"{{ item }}\" already exists' in '{{ psql_res.stderr }}'"
  become: yes
  become_user: postgres
  with_items:
    - fuzzystrmatch
    - hstore
    - pgcrypto

- name: read postgresql_version
  command: psql -qAt -c "SELECT regexp_replace(current_setting('config_file'), '^.*/etc/postgresql/(.*)/main.*$', '\1');"
  register: psql_res
  become: yes
  become_user: postgres

- name: set postgresql_version to {{ psql_res.stdout_lines[0] }}
  set_fact:
    postgresql_version: "{{ psql_res.stdout_lines[0] }}"

- name: create postgresql conf.d
  file:
    path: /etc/postgresql/{{ postgresql_version }}/main/conf.d
    state: directory

- name: configure postgresql
  template:
    dest="/etc/postgresql/{{ postgresql_version }}/main/conf.d/10-ansible-osmose.conf"
    src="postgresql-config"
    owner=root
  notify:
    - restart postgresql

- name: checkout git repository
  git: repo=https://github.com/osm-fr/osmose-frontend.git dest=/data/project/osmose/frontend/ force=no update=no
  become: yes
  become_user: osmose

- name: git config receive.denyCurrentBranch refuse
  command: chdir=/data/project/osmose/frontend/ git config receive.denyCurrentBranch ignore
  become: yes
  become_user: osmose

# Configure nodejs
- name: get nodejs apt key
  apt_key:
    url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
    state: present

- name: add nodejs apt repository
  apt_repository:
    repo: deb https://deb.nodesource.com/node_20.x "{{ ansible_distribution_release }}" main
    state: present
    filename: nodesource

- name: install nodejs packages
  apt:
    pkg: nodejs
    state: latest

- name: npm install
  command: chdir=/data/project/osmose/frontend/web/ npm install
  become: yes
  become_user: osmose

- name: npm run build
  command: chdir=/data/project/osmose/frontend/web/ npm run build
  become: yes
  become_user: osmose

- name: configure osmose website
  lineinfile: dest="/data/project/osmose/frontend/modules/utils.py" regexp="^website *="
              line="website           = \"{{ osmose_frontend_site }}\""

- name: make mo
  command: chdir=/data/project/osmose/frontend/web/po/ make mo
  become: yes
  become_user: osmose

- name: python virtualenv
  pip:
    chdir: /data/project/osmose/frontend/
    requirements: requirements.txt
    virtualenv: /data/project/osmose/frontend/osmose-frontend-venv
    virtualenv_python: python3
  become: yes
  become_user: osmose

- name: python virtualenv for prod
  pip:
    chdir: /data/project/osmose/frontend/
    requirements: requirements-prod.txt
    virtualenv: /data/project/osmose/frontend/osmose-frontend-venv
    virtualenv_python: python3
  become: yes
  become_user: osmose

- name: psql init
  command: chdir=/data/project/osmose/frontend/ psql -d osmose_frontend -f tools/database/schema.sql
  become: yes
  become_user: osmose

- name: copy apache config
  command: creates="/etc/apache2/sites-available/{{ osmose_frontend_site }}.conf" cp /data/project/osmose/frontend/apache-site "/etc/apache2/sites-available/{{ osmose_frontend_site }}.conf"

- name: configure apache website
  lineinfile: dest="/etc/apache2/sites-available/{{ osmose_frontend_site }}.conf" regexp="{{ item.regexp }}"
              line="{{ item.line }}"
  notify: restart apache
  with_items:
    - {regexp: "ServerName", line: "        ServerName {{ osmose_frontend_site }}"}
    - {regexp: "ErrorLog",   line: "        ErrorLog /var/log/apache2/{{ osmose_frontend_site }}-error.log"}
    - {regexp: "CustomLog",  line: "        CustomLog /var/log/apache2/{{ osmose_frontend_site }}-access.log combined"}

- name: add apache mods
  file: src="/etc/apache2/mods-available/{{ item }}" dest="/etc/apache2/mods-enabled/{{ item }}" state=link
  notify: restart apache
  with_items:
    - expires.load
    - headers.load
    - rewrite.load
    - cache.load
    - cache_disk.conf
    - cache_disk.load
    - proxy.conf
    - proxy.load
    - proxy_http.load

- name: configure apache mpm_event
  lineinfile:
    dest: "/etc/apache2/mods-available/mpm_event.conf"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  notify: restart apache
  with_items:
    - {regexp: "StartServers",           line: "	StartServers		1"}
    - {regexp: "MinSpareThreads",        line: "	MinSpareThreads		15"}
    - {regexp: "MaxSpareThreads",        line: "	MaxSpareThreads		75"}
    - {regexp: "ThreadsPerChild",        line: "	ThreadsPerChild		25"}
    - {regexp: "MaxRequestWorkers",      line: "	MaxRequestWorkers	150"}
    - {regexp: "MaxConnectionsPerChild", line: "	MaxConnectionsPerChild	500"}

- name: enable apache site
  file: src="/etc/apache2/sites-available/{{ osmose_frontend_site }}.conf" dest="/etc/apache2/sites-enabled/{{ osmose_frontend_site }}.conf" state=link
  notify: restart apache

- name: configure gunicorn on systemd
  copy:
    src: systemd-gunicorn.service
    dest: /etc/systemd/system/gunicorn-osmose.service
    owner: root
    group: root
  notify: restart gunicorn

- name: initialize daily crontab
  cron: name="launch osmose-frontend" hour=2 minute=2 job="(cd frontend && tools/cron.sh)"
  become: yes
  become_user: osmose
